name: Version Management

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  version-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check version format
        run: |
          VERSION=$(node -p "require('./package.json').version")
          if ! [[ $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+(\.[0-9]+)?)?$ ]]; then
            echo "Invalid version format: $VERSION"
            exit 1
          fi
      
      - name: Check changelog
        run: |
          VERSION=$(node -p "require('./package.json').version")
          if ! grep -q "## \[$VERSION\]" CHANGELOG.md; then
            echo "Version $VERSION not found in CHANGELOG.md"
            exit 1
          fi

  release:
    needs: version-check
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/**/*
            package.json
            CHANGELOG.md
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 